server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;
    index index.php index.html index.htm;

    # Development settings - more verbose logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Disable caching for development
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    add_header Pragma "no-cache";
    add_header Expires "0";

    # CORS for development
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';

    # Handle OPTIONS requests
    if ($request_method = OPTIONS) {
        return 204;
    }

    # Handle Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP-FPM configuration
    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # Extended timeouts for debugging
        fastcgi_read_timeout 3600;
        fastcgi_send_timeout 3600;
    }

    # Don't deny access to hidden files in development
    location ~ /\.(env|git) {
        # Still log access for security awareness
        access_log /var/log/nginx/hidden_access.log;
    }

    # Laravel storage symlink
    location /storage {
        alias /var/www/html/storage/app/public;
    }

    # Development settings
    client_max_body_size 100M;
    server_tokens on;

    # Hot reload for development assets
    location /hot {
        proxy_pass http://localhost:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}