version: '3.8'

services:
  # Laravel application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smartop-app
    ports:
      - "8000:80"
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/uploads:/var/www/html/public/uploads
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - mysql
      - redis
    networks:
      - smartop-network
    restart: unless-stopped

  # MySQL database
  mysql:
    image: mysql:8.0
    container_name: smartop-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: smartop
      MYSQL_USER: smartop
      MYSQL_PASSWORD: smartop_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - smartop-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7.0-alpine
    container_name: smartop-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - smartop-network
    restart: unless-stopped

  # Nginx load balancer (for scaling)
  nginx:
    image: nginx:alpine
    container_name: smartop-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/production.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - smartop-network
    restart: unless-stopped

  # Mail service for development
  mailpit:
    image: axllent/mailpit
    container_name: smartop-mail
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - smartop-network
    restart: unless-stopped

  # MinIO for file storage (S3 compatible)
  minio:
    image: minio/minio
    container_name: smartop-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: smartop
      MINIO_ROOT_PASSWORD: smartop_storage_password
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - smartop-network
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus
    container_name: smartop-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - smartop-network
    restart: unless-stopped

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana
    container_name: smartop-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin_password
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - smartop-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  smartop-network:
    driver: bridge